name: Deploy app to AKS 

on:
  push:

env:
  AZURE_CONFIG_DIR: /tmp/.azure
  DEPLOYMENT: pingpong
  IMAGE: pingpong
  BRANCH: ${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Check for ACR Password and Name.
    - name: Log in to Azure Container Registry
      run: |
        echo "${{ secrets.AZURE_ACR_PASSWORD }}" | docker login ${{ secrets.ACR_NAME }}.azurecr.io -u ${{ secrets.AZURE_ACR_USERNAME }} --password-stdin
    
    - name: Build and Push logout image
      run: |
        docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/logout407:latest -f logout/Dockerfile .
        docker push ${{ secrets.ACR_NAME }}.azurecr.io/logout407:latest
        
    - name: Build and Push pingpong image
      run: |
        docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/pingpong407:latest -f pingpong/Dockerfile .
        docker push ${{ secrets.ACR_NAME }}.azurecr.io/pingpong407:latest


  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
   
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_SP_CREDENTIALS }}

    - name: Disable Azure CLI version check
      run: |            
        export AZURE_HTTP_USER_AGENT='None'

    # - name: Create Azure Config Directory
    #   run: |
    #     mkdir -p /home/runner/.azure
    #     chmod 755 /home/runner/.azure  
    
    - name: Get AKS credentials
      uses: azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AZURE_SP_CREDENTIALS }}
        resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
        cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

    # - name: Get AKS Credentials
    #   run: |
    #     az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }} --admin
    
    - name: First Deploy to AKS 
      run: |
        cd $GITHUB_WORKSPACE/gitopsExercise
        ls -la  
        kustomize build . | kubectl apply -f -

    - name: Set up Kustomize
      uses: imranismail/setup-kustomize@v2
 
    - name: Set images in kustomization.yaml
      run: |
          kustomize edit set image LOGOUT_IMAGE=${{ secrets.ACR_NAME }}.azurecr.io/logout407:latest
          kustomize edit set image PINGPONG_IMAGE=${{ secrets.ACR_NAME }}.azurecr.io/pingpong407:latest
          
    - name: commit kustomization.yaml to GitHub
      uses: EndBug/add-and-commit@v9          
      with:          
        add: 'kustomization.yml'
        message: New version released ${{ github.sha }}
          
    - name: Second Deploy to AKS
      run: | 
        kustomize build . | kubectl apply -f -
